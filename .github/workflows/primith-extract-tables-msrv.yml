name: Deploy PDF Table Extract Service to Azure

on:
  push:
    branches:
      - master
    paths:
      - 'primith-app/microservices/pdfTableExtract/**'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
      
    - name: Create deployment package with setup scripts
      run: |
        mkdir -p deploy_package
        
        # Copy application files
        cp primith-app/microservices/pdfTableExtract/app.py deploy_package/
        cp primith-app/microservices/pdfTableExtract/requirements.txt deploy_package/
        
        # Create a startup script that will run before the application
        cat > deploy_package/startup.sh << 'EOF'
echo "=============== STARTUP DIAGNOSTIC LOG ==============="
cd /home/site/wwwroot

echo "Current directory: $(pwd)"
echo "Directory contents:"
ls -la

echo "Python version:"
python --version

echo "Installing dependencies from requirements.txt..."
pip install -r requirements.txt

echo "Installed packages:"
pip list

echo "Creating status file to track successful setup..."
echo "Setup completed at $(date)" > setup_complete.txt

echo "=============== END DIAGNOSTIC LOG ==============="

# Start the application using gunicorn
echo "Starting application..."
gunicorn app:app --bind=0.0.0.0:8000
EOF

        # Make script executable
        chmod +x deploy_package/startup.sh
        
        # Create Python version marker for Oryx
        echo "3.13" > deploy_package/.python_version
        
        echo "Deployment package prepared with the following files:"
        ls -la deploy_package/
        
    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'primith-table-extract'
        publish-profile: ${{ secrets.AZURE_PDF_EXTRACT_PUBLISH_PROFILE }}
        package: ./deploy_package
        
    - name: Post-deployment instructions
      run: |
        echo "Deployment completed. Important:"
        echo "1. In Azure Portal, update startup command to: bash /home/site/wwwroot/startup.sh"
        echo "2. After deployment, check logs for diagnostic information"